name: Check GitHub Release
on: 
  workflow_dispatch:
  schedule:
    - cron: '*/30 * * * *'

jobs:
  check:
    strategy:
      matrix:
        env_name:
          - ClashPremium
          - ArchiSteamFarm
          - SeafileServerPro
          - SeafileClient
          - TrueNASSCALE
          - CrystalDiskInfo
    name: Check GitHub Release
    runs-on: ubuntu-latest
    environment: ${{ matrix.env_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Latest Version
        shell: pwsh
        run: |
          $version = & ${{ vars.GET_VERSION_SCRIPT }}
          "latest_version=$version" >> $env:GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Send Telegram Message
        if: ${{ env.latest_version != '' && vars.VERSION != env.latest_version }}
        shell: pwsh
        env:
          TELEGRAM_BOT_APITOKEN: ${{ secrets.TELEGRAM_BOT_APITOKEN }}
          TELEGRAM_BOT_CHATID: ${{ secrets.TELEGRAM_BOT_CHATID }}
        run: |
          $message = @"
          [${{ vars.NAME }}](${{ vars.URI }})
          新版本：${{ env.latest_version }}
          "@
          $message = $message.replace('.', '\.')
          ./Send-TelegramMessage.ps1 ${{ vars.VERSION }} ${{ env.latest_version }}

      - name: Update VERSION
        if: ${{ env.latest_version != '' && vars.VERSION != env.latest_version }}
        shell: bash
        run: |
          gh api \
            --method PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repositories/${{ github.event.repository.id }}/environments/${{ matrix.env_name }}/variables/VERSION \
            -f name='VERSION' \
            -f value='${{ env.latest_version }}'
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
